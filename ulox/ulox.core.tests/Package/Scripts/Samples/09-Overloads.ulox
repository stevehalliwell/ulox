// classes can overload operators 

class Vec2
{
	static Create(x,y)
	{
		var ret = Vec2();
		ret.x = x;
		ret.y = y;
		return ret;
	}
    
    static Scale(v2, scalar)
    {
        return Vec2.Create(v2.x* scalar, v2.y*scalar);
    }

	var x, y;

	_add(lhs, rhs)
	{
		return Vec2.Create(lhs.x + rhs.x, lhs.y + rhs.y);
	}

	_mul(lhs, rhs)
	{
		return Vec2.Create(lhs.x * rhs.x, lhs.y * rhs.y);
	}

	_eq(lhs, rhs)
	{
		return lhs.x == rhs.x and lhs.y == rhs.y;
	}
}

test Vec2Tests
{
	testcase Add
	{
		var expected = Vec2.Create(4,6);
		var result;
		var a = Vec2.Create(1,2);
		var b = Vec2.Create(3,4);

		result = a+b;

		Assert.IsTrue(expected == result);
	}

	testcase Mul
	{
		var expected = Vec2.Create(3,8);
		var result;
		var a = Vec2.Create(1,2);
		var b = Vec2.Create(3,4);

		result = a*b;

		Assert.IsTrue(expected == result);
	}

	testcase Equal
	{
		var expected = true;
		var result;
		var a = Vec2.Create(1,2);
		var b = Vec2.Create(1,2);

		result = a == b;

		Assert.IsTrue(result);
	}

	testcase Scale
	{
		var expected = Vec2.Create(2,4);
		var result;
		var a = Vec2.Create(1,2);
		var b = 2;

		result = Vec2.Scale(a,b);

		Assert.IsTrue(expected == result);
	}
}