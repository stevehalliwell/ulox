class Ball
{
    var pos = Vec2();
    var go;
    var rb;

    init(pos, go, rb)
    {
    }

    OnHitGutter()
    {
        (inject BreakoutInst).BallLost();
    }
}

test BallTests
{
    testcase OnHitGutter
    {
        var mock = {:};
        var called = false;
        mock.BallLost = fun ()
        {
            called = true;
        };
        register BreakoutInst mock;
        var ball = Ball(Vec2(), null, null);

        ball.OnHitGutter();
        
        Assert.IsTrue(called);
    }
}

Factory.SetLine(Ball, {:});
Factory.Line(Ball).Create = fun (pos)
{
    var go = CreateFromPrefab("Ball");
    SetGameObjectPosition(go, pos.x, pos.y, 0);
    SetSpriteColour(go, 1,0,0,1);
    SetGameObjectTag(go, "Ball");
    var rb = GetRigidBody2DFromGameObject(go);
    SetRigidBody2DVelocity(rb, 0,0);
    
    var ball = Ball(pos, go, rb);
    SetCollisionCallback(ball.go, "Gutter", ball.OnHitGutter);
    return ball;
};