testset DynamicTests
{
    test DynamicField
    {
        var expected = 3;
        var result = 0;
        var o = {=};
        o.val = expected;

        result = o.val;

        Assert.AreEqual(expected, result);
    }

    test DynamicMethod
    {
        var expected = 3;
        var result = 0;
        var o = {=};
        fun Method(){retval =expected;}
        o.Meth = Method;

        result = o.Meth();

        Assert.AreEqual(expected, result);
    }

    test DynamicInstanceAccess
    {
        var expected = 3;
        var result = 0;
        var o = {val=expected, Meth= fun (self) {retval =self.val;},};
       
        result = o.Meth(o);

        Assert.AreEqual(expected, result);
    }

    test DynamicInstanceAccessViaInline
    {
        var expected = 3;
        var result = 0;
        var o = {val=expected, Meth= fun (self) {retval =self.val;},};
       
        result = o.Meth(o);

        Assert.AreEqual(expected, result);
    }

    test HasFieldOnString_Throws
    {
        fun Act()
        {
            var s = "hello";
            var dyn = {=};
            dyn.HasField(s, "afield");
        }

        Assert.Throws(Act);
    }

    test RemoveFieldOnString_Throws
    {
        fun Act()
        {
            var s = "hello";
            var dyn = {=};
            dyn.RemoveField(s, "afield");
        }

        Assert.Throws(Act);
    }
}