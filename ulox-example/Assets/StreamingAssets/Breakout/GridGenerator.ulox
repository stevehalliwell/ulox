class GridGenerator
{
    var startingPoint = Vec2();
    var stepSize = Vec2();

    init(startingPoint,stepSize){}
    
    FromRowCol(rows, cols)
    {
        var retval = [];

        var step = this.stepSize;
        var halfCols = (cols-1) * 0.5 * step.x;
        var corner = this.startingPoint - Vec2.Create(halfCols, 0);

        for(var y = 0; y < rows; y+=1)
        {
            for(var x = 0; x < cols; x+=1)
            {
                retval.Add(Vec2.Create(x,-y) * step + corner);
            }
        }
        return retval;
    }
}

test GridGeneratorTests
{
    testcase TenByTen
    {
        var grid = GridGenerator(Vec2.Create(0,30), Vec2.Create(6,3));
        
        var posList = grid.FromRowCol(10,10);
        
        Assert.AreEqual(100, posList.Count());
    }
}