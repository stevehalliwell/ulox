// Tests have a body fixure, it is executed once before each test
//  to allow for local setup of the test environment.
// In the following fixture, hello will be printed twice, as there are two test cases.
// Test cases are executed in the order they are defined in, but since the fixture
//	is repeated, you can ignore the order.
testset Fixture
{
	print("hello");

	test One
	{

	}

	test Two
	{
		
	}
}

// Tests can optionally take a data source and arguments.
// The data source is an expression given in () after the test keyword
//	and before the test name.
// The data soucre must be a native array.
// The number of arguments to the testset must match the number of entries at each index 
//	of the data source. They are applied in order, and the test is repeated for 
//	Count of the data source.
testset DataTests
{
	var dat = [1,2,3,4,5];

	// Here we use a text fixture body variable as the data source. 
	// The test will run data.Count times.
	test (dat) IsNumber(val)
	{
		//if you really want to you can access the data source in the test body as
		var dataSourceIs = testDataSource;
		//if you really want to you can access the row of data currently being used for the test as
		var dataRowIs = testDataRow;

		Assert.IsTrue(typeof(val) == typeof(0));
	}

	// Here we use an inline array as the data source.
	// The test will run 2 times. as the data source as two elements.
	test ([ [1,2,3], [1,1,2] ]) Addition(a,b, expected)
    {
        var result = a+b;

        Assert.AreEqual(expected,result);
    }
}