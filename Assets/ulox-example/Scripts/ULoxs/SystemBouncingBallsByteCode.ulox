/*
Code we expect from Unity's side;
SetUIText(string)
CreateFromPrefab(string):GameObject (returns a GameObject reference that we'll pass back to unity)
GetKey(string):bool
SetGameObjectPosition(GameObject, x, y, z)
ReloadScene - reload the current unity scene


Unity will find and call: 
- SetupGame in Start
- Update in Update
*/

//functions and data
var dt = 0;
var limit = 5;
var numBallsToSpawn = 100;

var ballName = "BouncyBall";
var balls = List();

fun RandVec2()
{
	return Vec2.Create(RandRange(-3,3),RandRange(-3,3));
}

fun Scale(v2, scalar)
{
	return Vec2.Create(v2.x* scalar, v2.y*scalar);
}

class Ball
{
	var pos = RandVec2(),
		vel = RandVec2(),
		go = CreateFromPrefab(ballName);
	
  	Tick()
  	{
  		this.pos = this.pos + Scale(this.vel, dt);
		this.Contain(limit);
		this.UpdateGoPosition();
  	}
	
	Contain(lim)
	{
		var x = this.pos.x;
		var y = this.pos.y;
		var v = this.vel;

  		if((x < -lim and v.x < 0) or 
  		   (x > lim  and v.x > 0) )
  		{
			  v.x = v.x * -1;
			  this.vel = v;
		}
  		
  		if((y < -lim and v.y < 0) or
  		   (y > lim  and v.y > 0) )
  		{
			  v.y = v.y * -1;
			  this.vel = v;
		}
	}
	
	UpdateGoPosition()
	{
  		SetGameObjectPosition(this.go, this.pos.x, this.pos.y, 0);
	}
}

fun SetupGame()
{
	print ("Setting Up Game");

	for(var i = 0; i < numBallsToSpawn; i += 1)
	{
		balls.Add(Ball());
	}
}

fun Update()
{
	if(GetKey("escape")){ReloadScene();}

	var len = balls.Count();
	for(var i = 0; i < len; i = i + 1)
	{
		balls.Get(i).Tick();
	}
}
