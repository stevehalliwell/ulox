testset Comparisons
{
    test EqualityBool
    {
        var result = 0;
        var a = true;
        var b = false;

        result = a == b;

        Assert.IsFalse(result);
    }

    test InEqualityBool
    {
        var result = 0;
        var a = true;
        var b = false;

        result = a != b;

        Assert.IsTrue(result);
    }

    test EqualityNumber
    {
        var result = 0;
        var a = 1;
        var b = 2;

        result = a == b;

        Assert.IsFalse(result);
    }

    test InEqualityNumber
    {
        var result = 0;
        var a = 1;
        var b = 2;

        result = a != b;

        Assert.IsTrue(result);
    }

    test EqualityString
    {
        var result = 0;
        var a = "Hello";
        var b = "World";

        result = a == b;

        Assert.IsFalse(result);
    }

    test InEqualityString
    {
        var result = 0;
        var a = "Hello";
        var b = "World";

        result = a != b;

        Assert.IsTrue(result);
    }
}

/*
    Storing these together as they are related and gives us
    a reason to have a block comment in here to parse out and
    increase our test coverage.
*/

testset Logic
{
    test And
    {
        var result = 0;
        var a = true;
        var b = false;

        result = a and b;

        Assert.IsFalse(result);
    }

    test Or
    {
        var result = 0;
        var a = true;
        var b = false;

        result = a or b;

        Assert.IsTrue(result);
    }

    test Not
    {
        var result = 0;
        var a = true;

        result = !a;

        Assert.IsFalse(result);
    }

    test Truthy
    {
        var result = 0;
        var a = "true";

        result = !a;

        Assert.IsFalse(result);
    }

    test ChainShort
    {
        var result = 0;
        var a = true;
        var b = false;
        var c = true;

        result = a and b or c;

        Assert.IsTrue(result);
    }

    test ChainLong
    {
        var result = 0;
        var a = true;
        var b = false;
        var c = true;
        var d = false;

        result = a and b or c and d;

        Assert.IsFalse(result);
    }
}