var dt = 0;
var points = [];
var gos = [];

data Circle
{
	x = 0,
	y = 0, 
	py = 0,
	anchorY = 0,
	pullY = 0,
	go = CreateFromPrefab("Circle"),
}

fun SetupGame()
{
	print ("Setting Up Game");

	var numToSpawn = 50;
	var startX = -12.5;
	var stepX = 0.5;

	for(var i = 0; i < numToSpawn; i += 1)
	{
		var circ = Circle();
		circ.x = startX + i * stepX;
		points.Add(circ);
		gos.Add(circ.go);
	}
}

fun Update()
{
	if(GetKey("escape")){ReloadScene();}

	var pullFactor = 2;
	var firstNeighScale = 0.75;
	var secondNeighScale = 0.65;
	var thirdNeighScale = 0.35;
	var pDevScale = 0.5;
	var dragSharpness = 3;
	var dragFac = Math.Exp(-dragSharpness * dt) * dt;

	var circCount = points.Count();
	for(var i = 0; i < circCount; i += 1)
	{
		var item = points[i];
		var px = 0;
		var py = 0;
		var y = item.y;
		var neigh;

		neigh = points[(i-3 + circCount) % circCount];
		py += (neigh.y - y) * thirdNeighScale;
		neigh = points[(i-2 + circCount) % circCount];
		py += (neigh.y - y) * secondNeighScale;
		neigh = points[(i-1 + circCount) % circCount];
		py += (neigh.y - y) * firstNeighScale;
		neigh = points[(i+1) % circCount];
		py += (neigh.y - y) * firstNeighScale;
		neigh = points[(i+2)% circCount];
		py += (neigh.y - y) * secondNeighScale;
		neigh = points[(i+3)% circCount];
		py += (neigh.y - y) * thirdNeighScale;

		item.pullY = py;
	}


	if(GetKey("space")){RandomPullAll();}
	if(GetKey("r")){RandomPull();}
	if(GetKey("h")){HoldMiddle();}

	loop(points)
	{
		var dy = item.y - item.py;
		item.py = item.y;
		var pull = item.pullY;
		item.pullY = 0;
		var y = item.y;
		var pDev = y - item.anchorY;
		
		pull += -pDev * pDevScale;
		pull *= pullFactor;
		pull *= dt;
		y += dy + pull;
		var vel = (y - item.py) / dt;
		y = item.py + vel * dragFac;
		item.y = y;
	}

	SetListOfGoToListOfPositions(gos, points, "x", "y");
}

fun RandomPullAll()
{
	loop(points)
	{
		item.pullY = RandRange(-1, 1);
	}
}

fun RandomPull()
{
	var index = points.Count()/2;
	var item = points[index];
	item.pullY = RandRange(-1, 1);
}

fun HoldMiddle()
{
	var index = points.Count()/2;
	var item = points[index];
	item.y = 3;
}