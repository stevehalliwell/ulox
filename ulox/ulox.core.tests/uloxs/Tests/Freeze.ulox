class Foo
{

}

testset FreezeTests
{
    test CannotAddFieldsToFrozenClass
    {
        fun AttemptToAddToClass()
        {
            Foo.a = "not allowed";
        }

        Assert.Throws(AttemptToAddToClass);
    }

    test CannotAddFieldsToFrozenInstance
    {
        fun AttemptToAddToInst()
        {
            var f = Foo();
            f.a = "not allowed";
        }

        Assert.Throws(AttemptToAddToInst);
    }

    test UnfreezeAndModify
    {
        var expected = 1;
        var result = 0;
        var inst = Foo();

        Unfreeze(inst);
        inst.a = expected;
        result = inst.a;

        Assert.AreEqual(expected, result);
    }

    test FreezeDynamic
    {
        var inst = {=};

        Freeze(inst);

        expect IsFrozen(inst);
    }
}
